distancias <- as.matrix(read.csv(file="distancia.csv", header=FALSE, sep=","))
is.symmetric.matrix(distancias)
#Limpando o ambiente
rm(list=ls())
library('matrixcalc')
#Lendo os dados
distancias <- as.matrix(read.csv(file="distancia.csv", header=FALSE, sep=","))
is.symmetric.matrix(distancias)
iseq[-1]
#Limpando o ambiente
rm(list=ls())
#Importando Bibliotecas e Arquivos necessários
library('matrixcalc')
source('newsolution.R') #Coloca como Source o arquivo que contem a solucao newsolution (vizinhança)
#Lendo os dados
distancias <- as.matrix(read.csv(file="distancia.csv", header=FALSE, sep=","))
#Gerando solução inicial
#x <- solucaoinicial(distancias) #Coloca para receber uma solução inicial
#######################APAGAR QUANDO TIVER O ARQUIVO SOLUÇÃO INICIAL#########
#######POR ENQUANTO, GERA UMA COMPLETAMENTE ALEATÓRIA######################
x <- matrix(0,nrow=2,ncol=250)
iseq <- sample(250)
x[1,1] <- 1
iseq[-1]
iseq[-which(iseq == 1)]
which(iseq == 1)
x[1,] <- iseq[-which(iseq == 1)]
x[1,2:250] <- iseq[-which(iseq == 1)]
x
View(x)
i <- 1
x[1,i+1]
x
View(x)
distancias[x[1,i+1]]
x[1,i+1]
x[1,i]
x[1,i+1]
distancias[x[1,i],x[1,i+1]]
View(distancias)
distancias[1,137]
x[1,2:250] <- iseq[-which(iseq == 1)]
for (i in 1:249){
x[2,i] <- distancias[x[1,i],x[1,i+1]]
}
x[2,250] <- distancias[x[1,250],1]
View(x)
x[2,250]
x[1,1] <- 1
x[1,2:250] <- iseq[-which(iseq == 1)]
for (i in 1:249){
x[2,i] <- distancias[x[1,i],x[1,i+1]]
}
x[2,250] <- distancias[x[1,250],1]
custo <- sum(x[2,])
